[{"C:\\projects\\todo-list-react-query-ts\\src\\index.tsx":"1","C:\\projects\\todo-list-react-query-ts\\src\\reportWebVitals.ts":"2","C:\\projects\\todo-list-react-query-ts\\src\\App.tsx":"3","C:\\projects\\todo-list-react-query-ts\\src\\Components\\List.tsx":"4","C:\\projects\\todo-list-react-query-ts\\src\\Components\\NewItem.tsx":"5","C:\\projects\\todo-list-react-query-ts\\src\\Components\\UI\\Scroll.tsx":"6","C:\\projects\\todo-list-react-query-ts\\src\\Components\\ListItem.tsx":"7","C:\\projects\\todo-list-react-query-ts\\src\\Components\\UI\\Card.tsx":"8"},{"size":518,"mtime":1628839215591,"results":"9","hashOfConfig":"10"},{"size":440,"mtime":1628839215592,"results":"11","hashOfConfig":"10"},{"size":1454,"mtime":1629119908709,"results":"12","hashOfConfig":"10"},{"size":1372,"mtime":1629121017191,"results":"13","hashOfConfig":"10"},{"size":790,"mtime":1628840149208,"results":"14","hashOfConfig":"10"},{"size":395,"mtime":1628853660775,"results":"15","hashOfConfig":"10"},{"size":948,"mtime":1628860471429,"results":"16","hashOfConfig":"10"},{"size":311,"mtime":1628853510573,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1eko74k",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\projects\\todo-list-react-query-ts\\src\\index.tsx",[],["38","39"],"C:\\projects\\todo-list-react-query-ts\\src\\reportWebVitals.ts",[],"C:\\projects\\todo-list-react-query-ts\\src\\App.tsx",["40"],"import './App.scss';\r\nimport React from 'react';\r\nimport logo from './logo.svg';\r\nimport { QueryClient, QueryClientProvider, useQuery } from 'react-query';\r\nimport { ReactQueryDevtools } from 'react-query/devtools';\r\n\r\n// components\r\nimport List from './Components/List';\r\nimport NewItem from './Components/NewItem';\r\n\r\nfunction App() {\r\n\r\n  const queryClient = new QueryClient({\r\n    defaultOptions: {\r\n      queries: {\r\n        refetchOnWindowFocus: false,\r\n        //staleTime: 5000,\r\n      },\r\n    },\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <QueryClientProvider client={queryClient}>\r\n        <div className=\"relative w-screen h-screen overflow-hidden flex bg-reactBlue\">\r\n          <div className=\"items-center flex flex-col w-full pt-10\">\r\n            <div className=\"flex\">\r\n              <span className=\"text-5xl text-lightBlue\">To-Do List</span>\r\n              <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n            </div>\r\n            <div className=\"flex flex-col w-full px-64 pb-16 flex-grow text-lightBlue\">\r\n              <NewItem />\r\n              <List />\r\n              {/* <NewItem onSave={onSave} forEdit={forEdit} editedItem={editedItem}/>\r\n                    <List collection={taskList} deleteHandler={deleteFunction} editHandler={sendEdit}/> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <ReactQueryDevtools initialIsOpen={false} />\r\n      </QueryClientProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\projects\\todo-list-react-query-ts\\src\\Components\\List.tsx",["41"],"import React from 'react';\r\nimport { useMutation, useQuery } from 'react-query';\r\nimport Scroll from './UI/Scroll';\r\nimport ListItem from './ListItem';\r\nimport InitItems from '../data.json';\r\n\r\nconst fetchTodoList = async () => {\r\n    const res = InitItems;\r\n    return res;\r\n}\r\n\r\nconst List: any = () => {\r\n\r\n    const { data, status } = useQuery('todos', fetchTodoList, {\r\n        cacheTime: 1000,\r\n    });\r\n\r\n    //const mutation = useMutation(deleteTodo => { });\r\n\r\n    if (!data) {\r\n        return null;\r\n    }\r\n\r\n    const deleteHandler = (item: number) => {\r\n        console.log(item);\r\n    }\r\n\r\n    if (status === 'success') {\r\n        console.log(data);\r\n\r\n\r\n        return (\r\n            <div className=\"relative flex flex-grow\">\r\n                <Scroll>\r\n                    <div>\r\n                        {\r\n                            data.map((item: { id: any }) => (\r\n                                <ListItem\r\n                                    key={item.id}\r\n                                    podaci={item}\r\n                                    deleteHandler={deleteHandler}\r\n                                />\r\n                                // editHandler={editHandler}\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </Scroll>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default List;","C:\\projects\\todo-list-react-query-ts\\src\\Components\\NewItem.tsx",[],"C:\\projects\\todo-list-react-query-ts\\src\\Components\\UI\\Scroll.tsx",[],"C:\\projects\\todo-list-react-query-ts\\src\\Components\\ListItem.tsx",["42"],"import React from 'react';\r\nimport Card from './UI/Card';\r\n\r\ninterface Idata {\r\n    id: Number,\r\n    title: string,\r\n    comment: string\r\n}\r\n\r\nconst ListItem: React.FC<any> = (props: any) => {\r\n\r\n    const deleteItem = () => {\r\n        props.deleteHandler(props.podaci.id)\r\n    }\r\n\r\n    return (\r\n        <Card key={props.podaci.id} bg=\"bg-lightGray\">\r\n            <span className=\"text-green-300 text-2xl py-2\">{props.podaci.title}</span>\r\n            <span className=\"text-green-300\">{props.podaci.comment}</span>\r\n            <div className=\"flex justify-end\">\r\n                {/* <span \r\n                    className=\"button bg-lightBlue\"\r\n                    onClick={editItem}\r\n                >Edit</span> */}\r\n                <span \r\n                    className=\"button bg-darkRed ml-3\"\r\n                    onClick={deleteItem}\r\n                >Delete</span>\r\n            </div>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default ListItem;","C:\\projects\\todo-list-react-query-ts\\src\\Components\\UI\\Card.tsx",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":4,"column":44,"nodeType":"49","messageId":"50","endLine":4,"endColumn":52},{"ruleId":"47","severity":1,"message":"51","line":2,"column":10,"nodeType":"49","messageId":"50","endLine":2,"endColumn":21},{"ruleId":"47","severity":1,"message":"52","line":4,"column":11,"nodeType":"49","messageId":"50","endLine":4,"endColumn":16},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"@typescript-eslint/no-unused-vars","'useQuery' is defined but never used.","Identifier","unusedVar","'useMutation' is defined but never used.","'Idata' is defined but never used.","no-global-assign","no-unsafe-negation"]